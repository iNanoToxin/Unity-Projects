#pragma kernel CellularAutomata

StructuredBuffer<int> inputBuffer;
RWStructuredBuffer<int> outputBuffer;
RWTexture2D<float4> textureBuffer;

bool drawing;
int w;
int h;

[numthreads(8, 8, 1)]
void CellularAutomata(uint3 id : SV_DispatchThreadID) {
    uint index = id.x + (id.y * w);

    if (drawing) {
        textureBuffer[id.xy] = float4(inputBuffer[index], 0.0, 0.0, 1.0);
        return;
    }

    int sum = 0;

    for (int i = -1; i <= 1; i++) {
        for (int j = -1; j <= 1; j++) {
            if (i == 0 && j == 0)
                continue;

            uint neighborX = (uint) (id.x + i + w) % w;
            uint neighborY = (uint) (id.y + j + h) % h;

            sum += inputBuffer[neighborX + (neighborY * w)];
        }
    }

    if (inputBuffer[index] == 0)
        outputBuffer[index] = (sum == 3) ? 1 : 0;
    else
        outputBuffer[index] = (sum == 2 || sum == 3) ? 1 : 0;

    textureBuffer[id.xy] = float4(outputBuffer[index], 0.0, 0.0, 1.0);
}